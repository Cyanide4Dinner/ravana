name: pr_codebase
on:
  # push:
  #   branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  CARGO_TERM_COLOR: always
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            code:
              - 'src/**'
              - 'Cargo.toml'
              - 'Cargo.lock'
            docs:
              - 'docs/**'
  build:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    env:
      COLORTERM: truecolor
      NPROC: 2
      TERM: xterm
    runs-on: ubuntu-latest
    steps:
      - name: "Notcurses dependencies"
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            cmake \
            doctest-dev \
            ffmpeg \
            libavcodec-dev \
            libavformat-dev \
            libavutil-dev \
            libdeflate-dev \
            libncurses-dev \
            libqrcodegen-dev \
            libreadline-dev \
            libswscale-dev \
            libunistring-dev \
            pkg-config \
            clang
      - name: "Notcurses checkout"
        uses: actions/checkout@v2
        with:
          repository: dankamongmen/notcurses
          token: ${{ github.token }}
          path: notcurses
          fetch-depth: 0
      - name: "Notcurses CMake"
        run: |
          cd notcurses
          mkdir build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DUSE_PANDOC=OFF \
            -DUSE_QRCODEGEN=on
      - name: "Notcurses Make"
        run: |
          cd notcurses/build
          make -j${NPROC}
      - name: "Notcurses Make install"
        run: |
          cd notcurses/build
          sudo make install
          sudo ldconfig
      - name: "Ravana checkout"
        uses: actions/checkout@v2
      - name: "Install latest nightly"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - name: "Ravana build"
        run: cargo build --verbose
      - name: "Ravana test"
        run: cargo test --verbose --no-fail-fast
